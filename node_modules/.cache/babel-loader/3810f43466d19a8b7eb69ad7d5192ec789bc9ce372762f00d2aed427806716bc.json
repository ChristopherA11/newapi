{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nexport var getCensusTrackData = function getCensusTrackData(radarData, metricEntries) {\n  var censusTrackData = _.map(_.groupBy(radarData, 'tract_id'), function (trackData, trackId) {\n    var metricHash = getMetricWiseData(trackData, metricEntries);\n    var trackLabel = trackId == \"undefined\" ? RADAR_TRACK_OTHER : trackId;\n    return {\n      trackId: trackLabel,\n      metricData: metricHash\n    };\n  });\n  return censusTrackData;\n};\nexport var tractMapBuckets = function tractMapBuckets(censusTrackData, metricEntries) {\n  var metricValues = {};\n  _.each(censusTrackData, function (censusEntry) {\n    _.each(metricEntries, function (metricEntry, index) {\n      var metricId = metricEntry['id'];\n      if (_.isEmpty(metricValues[metricId])) {\n        metricValues[metricId] = [];\n      }\n      metricValues[metricId].push(_.get(censusEntry, \"metricData[\".concat(index, \"].\").concat(metricId, \".change\")));\n    });\n  });\n  var metricBuckets = {};\n  _.each(metricEntries, function (metricEntry) {\n    var metricId = metricEntry['id'];\n    var values = _.get(metricValues, metricId);\n    var min = _.min(values);\n    var max = _.max(values);\n    var intervals = getLinearBuckets(min == max ? min - 1 : min, min == max ? max + 1 : max, 10, \"0\");\n    var radarColorPalette = getRadarColorPalette(_.clamp(intervals.length, 0, 10));\n    var bucketRanges = _.chain(0).range(intervals.length - 1).map(function (index) {\n      return {\n        start: intervals[index],\n        end: intervals[index + 1]\n      };\n    }).value();\n    metricBuckets[metricId] = _.map(bucketRanges, function (bucketRange, index) {\n      return _objectSpread(_objectSpread({}, bucketRange), {}, {\n        color: radarColorPalette[index] || _.last(radarColorPalette)\n      });\n    });\n  });\n  return metricBuckets;\n};\nexport var getShapeWiseChoroplethData = function getShapeWiseChoroplethData(radarData, metricEntry) {\n  return _.map(_.groupBy(radarData, 'tract_id'), function (trackData, trackId) {\n    var filteredData = _.filter(trackData, function (datum) {\n      return datum['radar_metric_id'] == metricEntry['id'] && datum['metric_index'] == metricEntry['metricIndex'];\n    });\n    var metricHash = calculateMetricData(filteredData, metricEntry);\n    return _objectSpread({\n      shape_id: trackId,\n      count: metricHash['change']\n    }, metricHash);\n  });\n};\nexport var getMetricWiseData = function getMetricWiseData(allMetricsData, metricEntries) {\n  var showNA = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSmallPage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var metricWiseData = [];\n  _.each(metricEntries, function (metricEntry) {\n    var metricHash = {};\n    var metricData = _.filter(allMetricsData, function (datum) {\n      return datum['radar_metric_id'] == metricEntry['id'] && datum['metric_index'] == metricEntry['metricIndex'];\n    });\n    if (_.isEmpty(metricData) && showNA && metricEntry['numerator_aggregate_type'] == 'avg') {\n      metricHash[metricEntry['id']] = getNaValueObject();\n    } else if (showNA && metricEntry['numerator_aggregate_type'] == 'avg' && isSmallPage) {\n      metricHash[metricEntry['id']] = getNaValueObject();\n    } else {\n      metricHash[metricEntry['id']] = calculateMetricData(metricData, metricEntry);\n    }\n    metricWiseData.push(metricHash);\n  });\n  return metricWiseData;\n};\nvar getNaValueObject = function getNaValueObject() {\n  return {\n    currentValue: 'N/A',\n    compareValue: 'N/A',\n    change: 'N/A'\n  };\n};\nvar calculateMetricData = function calculateMetricData(metricData, metricEntry) {\n  var denominatorColumn = metricEntry['denominator_column'];\n  var currentSumValue = 0;\n  var compareSumValue = 0;\n  var denominatorCurrentSumValue = 0,\n    denominatorCompareSumValue = 0;\n  _.each(metricData, function (datum) {\n    currentSumValue += Number(datum['current_value'] || 0);\n    compareSumValue += Number(datum['compare_value'] || 0);\n    denominatorCurrentSumValue += Number(datum['denominator_current_value'] || 0);\n    denominatorCompareSumValue += Number(datum['denominator_compare_value'] || 0);\n  });\n  var currentValue = currentSumValue;\n  var compareValue = compareSumValue;\n  if (!_.isEmpty(denominatorColumn)) {\n    if (denominatorCurrentSumValue != 0) {\n      currentValue = currentValue / denominatorCurrentSumValue;\n    }\n    if (denominatorCompareSumValue != 0) {\n      compareValue = compareValue / denominatorCompareSumValue;\n    }\n  }\n  var change = getPercentage(currentValue, compareValue);\n  return {\n    currentValue: _.round(currentValue, 2),\n    compareValue: _.round(compareValue, 2),\n    change: _.round(change, 2)\n  };\n};\nexport var getPercentage = function getPercentage(currentValue, compareValue) {\n  if (compareValue == 0) {\n    return currentValue == 0 ? 0 : 100;\n  }\n  var difference = currentValue - compareValue;\n  var percentage = 100.00 * difference / compareValue;\n  return _.isNaN(percentage) ? 0 : percentage;\n};\nexport var getBucketColor = function getBucketColor(metricValueEntry, buckets) {\n  var defaultBucket = _.last(buckets);\n  var matchingBucket = _.find(buckets, function (bucket) {\n    return metricValueEntry.change >= bucket.start && metricValueEntry.change <= bucket.end;\n  });\n  return _.get(matchingBucket || defaultBucket, 'color');\n};","map":{"version":3,"names":["getCensusTrackData","radarData","metricEntries","censusTrackData","_","map","groupBy","trackData","trackId","metricHash","getMetricWiseData","trackLabel","RADAR_TRACK_OTHER","metricData","tractMapBuckets","metricValues","each","censusEntry","metricEntry","index","metricId","isEmpty","push","get","metricBuckets","values","min","max","intervals","getLinearBuckets","radarColorPalette","getRadarColorPalette","clamp","length","bucketRanges","chain","range","start","end","value","bucketRange","color","last","getShapeWiseChoroplethData","filteredData","filter","datum","calculateMetricData","shape_id","count","allMetricsData","showNA","isSmallPage","metricWiseData","getNaValueObject","currentValue","compareValue","change","denominatorColumn","currentSumValue","compareSumValue","denominatorCurrentSumValue","denominatorCompareSumValue","Number","getPercentage","round","difference","percentage","isNaN","getBucketColor","metricValueEntry","buckets","defaultBucket","matchingBucket","find","bucket"],"sources":["/home/malini/api-crud/app/javascript/api/Button.js"],"sourcesContent":["export const getCensusTrackData = (radarData, metricEntries) => {\n  const censusTrackData = _.map(_.groupBy(radarData, 'tract_id'), (trackData, trackId) => {\n    let metricHash = getMetricWiseData(trackData, metricEntries);\n    const trackLabel = trackId == \"undefined\" ? RADAR_TRACK_OTHER : trackId;\n    return { trackId: trackLabel, metricData: metricHash };\n  });\n  return censusTrackData;\n}\n\nexport const tractMapBuckets = (censusTrackData, metricEntries) => {\n  const metricValues = {};\n  _.each(censusTrackData, (censusEntry) => {\n    _.each(metricEntries, (metricEntry, index) => {\n      const metricId = metricEntry['id'];\n      if (_.isEmpty(metricValues[metricId])) {\n        metricValues[metricId] = [];\n      }\n      metricValues[metricId].push(_.get(censusEntry, `metricData[${index}].${metricId}.change`));\n    });\n  });\n\n  const metricBuckets = {};\n  _.each(metricEntries, (metricEntry) => {\n    const metricId = metricEntry['id'];\n    const values = _.get(metricValues, metricId);\n    const min = _.min(values);\n    const max = _.max(values);\n    const intervals = getLinearBuckets(\n      (min == max) ? min - 1 : min,\n      (min == max) ? max + 1 : max,\n      10,\n      \"0\"\n    );\n\n    const radarColorPalette = getRadarColorPalette(_.clamp(intervals.length, 0, 10));\n    const bucketRanges = _.chain(0).\n      range(intervals.length - 1).\n      map((index) => {\n        return { start: intervals[index], end: intervals[index + 1] };\n      }).\n      value();\n    metricBuckets[metricId] = _.map(bucketRanges, (bucketRange, index) => {\n      return {\n        ...bucketRange,\n        color: radarColorPalette[index] || _.last(radarColorPalette)\n      }\n    });\n  });\n  return metricBuckets;\n}\n\nexport const getShapeWiseChoroplethData = (radarData, metricEntry) => {\n  return _.map(_.groupBy(radarData, 'tract_id'), (trackData, trackId) => {\n    const filteredData = _.filter(trackData, (datum) => {\n      return (datum['radar_metric_id'] == metricEntry['id'] &&\n        datum['metric_index'] == metricEntry['metricIndex']);\n    });\n    let metricHash = calculateMetricData(filteredData, metricEntry);\n    return {\n      shape_id: trackId,\n      count: metricHash['change'],\n      ...metricHash\n    };\n  });\n}\n\nexport const getMetricWiseData = (allMetricsData, metricEntries, showNA = false, isSmallPage = false) => {\n  let metricWiseData = [];\n  _.each(metricEntries, (metricEntry) => {\n    let metricHash = {}\n    const metricData = _.filter(allMetricsData, (datum) => {\n      return (datum['radar_metric_id'] == metricEntry['id'] &&\n        datum['metric_index'] == metricEntry['metricIndex']);\n    });\n    if (_.isEmpty(metricData) && showNA && metricEntry['numerator_aggregate_type'] == 'avg') {\n      metricHash[metricEntry['id']] = getNaValueObject()\n    } else if (showNA && metricEntry['numerator_aggregate_type'] == 'avg' && isSmallPage) {\n      metricHash[metricEntry['id']] = getNaValueObject();\n    } else {\n      metricHash[metricEntry['id']] = calculateMetricData(metricData, metricEntry)\n    }\n    metricWiseData.push(metricHash);\n  });\n  return metricWiseData;\n}\nconst getNaValueObject = () => {\n  return {\n    currentValue: 'N/A',\n    compareValue: 'N/A',\n    change: 'N/A'\n  }\n}\nconst calculateMetricData = (metricData, metricEntry) => {\n  const denominatorColumn = metricEntry['denominator_column'];\n  let currentSumValue = 0;\n  let compareSumValue = 0;\n  let denominatorCurrentSumValue = 0, denominatorCompareSumValue = 0;\n  _.each(metricData, (datum) => {\n    currentSumValue += Number(datum['current_value'] || 0);\n    compareSumValue += Number(datum['compare_value'] || 0);\n    denominatorCurrentSumValue += Number(datum['denominator_current_value'] || 0);\n    denominatorCompareSumValue += Number(datum['denominator_compare_value'] || 0);\n  });\n  let currentValue = currentSumValue;\n  let compareValue = compareSumValue;\n  if (!_.isEmpty(denominatorColumn)) {\n    if (denominatorCurrentSumValue != 0) {\n      currentValue = (currentValue / denominatorCurrentSumValue);\n    }\n    if (denominatorCompareSumValue != 0) {\n      compareValue = (compareValue / denominatorCompareSumValue);\n    }\n  }\n  let change = getPercentage(currentValue, compareValue);\n  return {\n    currentValue: _.round(currentValue, 2),\n    compareValue: _.round(compareValue, 2),\n    change: _.round(change, 2)\n  };\n}\nexport const getPercentage = (currentValue, compareValue) => {\n  if (compareValue == 0) {\n    return currentValue == 0 ? 0 : 100;\n  }\n  const difference = currentValue - compareValue;\n  const percentage = ((100.00 * difference) / compareValue);\n  return _.isNaN(percentage) ? 0 : percentage;\n}\nexport const getBucketColor = (metricValueEntry, buckets) => {\n  const defaultBucket = _.last(buckets);\n  const matchingBucket = _.find(buckets, (bucket) => {\n    return metricValueEntry.change >= bucket.start && metricValueEntry.change <= bucket.end;\n  });\n  return _.get((matchingBucket || defaultBucket), 'color');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}